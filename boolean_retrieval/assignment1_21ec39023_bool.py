# -*- coding: utf-8 -*-
"""Assignment1_21EC39023_bool

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XD5dpTIQ3Cfi_EJvNIYPKgqK4lMrdtxT
"""

import pickle

def boolean_retrieval(model_path, query_path):
    with open(model_path, 'rb') as f:
        inverted_index = pickle.load(f)

    results = []

    with open(query_path, 'r') as file:
        for line in file:
            query_id, query_text = line.strip().split('\t')
            query_tokens = query_text.split()
            print(f"Query ID: {query_id}, Tokens: {query_tokens}")
            # Retrieving documents using AND operation by taking intersection
            doc_ids = set(inverted_index[query_tokens[0]])
            for token in query_tokens[1:]:
                if token in inverted_index:
                    doc_ids = doc_ids.intersection(inverted_index[token])
                    print(f"Token '{token}' found in index with documents: {inverted_index[token]}")
                else:
                    doc_ids = set()  # Token not found in index, no docs match
                    print(f"Token '{token}' NOT found in index.")

            results.append(f"{query_id}: {' '.join(sorted(doc_ids))}")

    with open(f'Assignment1_21EC39023_results.txt', 'w') as f:
        f.write('\n'.join(results))

    # Printing a portion of the retrieval results
    print("Sample of the Retrieval Results:")
    for result in results[:1000]:  # Print the first 10 results
        print(result)

if __name__ == "__main__":
    import sys
    model_path = sys.argv[1]
    query_path = sys.argv[2]
    boolean_retrieval(model_path, query_path)